require('dotenv').config();

const { VK, Keyboard } = require('vk-io');

const vk = new VK({
    token: process.env.VK_TOKEN,
    webhookSecret: process.env.VK_SECRET,

});

exports.handler = async (event, context) => {
    const body = JSON.parse(event.body);
    const { type, group_id, secret } = body;

    if (secret !== process.env.VK_SECRET || group_id !== parseInt(process.env.VK_GROUP_ID, 10)) {
        return {
            statusCode: 403,
            body: 'Forbidden',
        };
    }

    if (type === 'confirmation') {
        return {
            statusCode: 200,
            body: process.env.VK_CONFIRMATION,
        };
    }

    await vk.updates.handleWebhookUpdate(body);

    return {
        statusCode: 200,
        body: 'OK',
    };
};

vk.updates.on('message_new', async (context) => {
    const text = context.text.trim().toLowerCase();
    console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', text);

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (['–≥—É–≥–∞', '–±–ª—ç–¥', 'bye'].includes(text)) {
        await context.send({
            message: "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤–∞—Å —Å –≤—ã–±–æ—Ä–æ–º —ç–∫—Å–∫—É—Ä—Å–∏–∏! üöÄ\n\n" +
                     "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ.\n\n" +
                     "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º. –ú—ã —Ä–∞–¥—ã –ø–æ–º–æ—á—å! üòâ",
            keyboard: Keyboard.keyboard([
                [Keyboard.textButton({ label: '\u{1f4b5} –£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', color: Keyboard.POSITIVE_COLOR })],
                [Keyboard.textButton({ label: '\u{1f4cc} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Å–∫—É—Ä—Å–∏–∏', color: Keyboard.PRIMARY_COLOR })],
                [Keyboard.textButton({ label: '\u{1f5d3} –î–∞—Ç—ã —ç–∫—Å–∫—É—Ä—Å–∏–π', color: Keyboard.NEGATIVE_COLOR })],
            ]).oneTime(),
        });
    } 
    
    // –î–∞—Ç—ã —ç–∫—Å–∫—É—Ä—Å–∏–π
    else if (text === '\u{1f5d3} –¥–∞—Ç—ã —ç–∫—Å–∫—É—Ä—Å–∏–π') {
        await context.send({
            message: "üóìÔ∏è –î–∞—Ç—ã —ç–∫—Å–∫—É—Ä—Å–∏–π.\n\n" +
                     "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–¥–µ—Å—åüëá\n" +
                     "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞—Ç—ã –ø–æ–µ–∑–¥–æ–∫.\n\n" +
                     "–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É —Ç—É—Ä–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏.\n\n" +
                     "–ì—Ä—É–ø–ø—ã –∏–∑ 4+ —á–µ–ª–æ–≤–µ–∫ –º–æ–≥—É—Ç –≤—ã–±—Ä–∞—Ç—å –ª—é–±—É—é —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å —Å–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–µ–π.",
            keyboard: Keyboard.keyboard([
                [Keyboard.textButton({ label: '\u{1f4cc} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Å–∫—É—Ä—Å–∏–∏', color: Keyboard.PRIMARY_COLOR })],
                [Keyboard.textButton({ label: '\u{1f4b5} –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å', color: Keyboard.POSITIVE_COLOR })],
                [Keyboard.textButton({ label: '\u{21a9} –ù–∞–∑–∞–¥', color: Keyboard.SECONDARY_COLOR })],
            ]).oneTime(),
        });
    } 
    
    // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    else if (text === '\u{1f4b5} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å') {
        await context.send({
            message: "–°–ø–∞—Å–∏–±–æ, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –±—Ä–æ–Ω—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞! ü§ù\n\n" +
                     "–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. –î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ:\n\n" +
                     "1. –ñ–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É —Ç—É—Ä–∞\n" +
                     "2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫ (–∏ –¥–µ—Ç–µ–π, –µ—Å–ª–∏ –µ—Å—Ç—å)\n\n" +
                     "–°–æ–≤–µ—Ç—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–∞–∑–¥–µ–ª–æ–º \"‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã\". –ñ–µ–ª–∞–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã—Ö –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π –≤ –≤–∞—à–µ–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏! ü¶Ö",
            keyboard: Keyboard.keyboard([
                [Keyboard.textButton({ label: '\u{21a9} –ù–∞–∑–∞–¥', color: Keyboard.SECONDARY_COLOR })],
                [Keyboard.textButton({ label: '\u{1f4c5} –ú–µ–Ω—é', color: Keyboard.PRIMARY_COLOR })],
                [Keyboard.textButton({ label: '\u{1f4ac} –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã FAQ', color: Keyboard.NEGATIVE_COLOR })],
            ]).oneTime(),
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    else {
        await context.send({
            message: "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
        });
    }
});
